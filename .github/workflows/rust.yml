name: Build and Test

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

matrix:  
 rust:
  - stable
  - beta
  - nightly
  - "1.76.0"
  - "1.77.0"
  - "1.78.0"
  - "1.79.0"
  - "1.80.0"
  - "1.81.0"
  - "1.82.0"
       
jobs:
  # Level 1: Base libraries with no internal dependencies
  build-base-${{ matrix.rust }}:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: mozilla-actions/sccache-action@v0.0.6

      # These have no internal dependencies
      - name: Build & Test macros
        run: |
          cargo build -p jetstream_macros
          if [ "${{ matrix.testing }}" = "true" ]; then
            cargo test --all-features -p jetstream_macros
          fi

      - name: Build & Test wireformat
        run: |
          cargo build -p jetstream_wireformat
          if [ "${{ matrix.testing }}" = "true" ]; then
            cargo test --all-features -p jetstream_wireformat
          fi

      - name: Build & Test rpc
        run: |
          cargo build -p jetstream_rpc
          if [ "${{ matrix.testing }}" = "true" ]; then
            cargo test --all-features -p jetstream_rpc
          fi

  # Level 2: Components depending on base libraries
  build-components-${{ matrix.rust }}:
    needs: build-base-${{ matrix.rust }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - "1.76.0"
          - "1.77.0"
          - "1.78.0"
          - "1.79.0"
          - "1.80.0"
          - "1.81.0"
          - "1.82.0"
        include:
          - rust: stable
            testing: true
          - rust: beta
            testing: true
          - rust: nightly
            testing: true
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: mozilla-actions/sccache-action@v0.0.6

      # Depends on macros, rpc, wireformat
      - name: Build & Test 9p
        run: |
          cargo build -p jetstream_9p
          if [ "${{ matrix.testing }}" = "true" ]; then
            cargo test --all-features -p jetstream_9p
          fi

      # Depends on 9p, rpc, wireformat
      - name: Build & Test client
        run: |
          cargo build -p jetstream_client
          if [ "${{ matrix.testing }}" = "true" ]; then
            cargo test --all-features -p jetstream_client
          fi

  # Level 3: Server (depends on everything)
  build-server-${{ matrix.rust }}:
    needs: 
    - build-base-${{ matrix.rust }}
    - build-components-${{ matrix.rust }}]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - "1.76.0"
          - "1.77.0"
          - "1.78.0"
          - "1.79.0"
          - "1.80.0"
          - "1.81.0"
          - "1.82.0"
        include:
          - rust: stable
            testing: true
          - rust: beta
            testing: true
          - rust: nightly
            testing: true
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: mozilla-actions/sccache-action@v0.0.6

      # Depends on 9p, client, rpc, wireformat
      - name: Build & Test server
        run: |
          cargo build -p jetstream_server
          if [ "${{ matrix.testing }}" = "true" ]; then
            cargo test --all-features -p jetstream_server
          fi

  # WASM builds
  build-wasm:
    needs: build-base-${{ matrix.rust }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: wasm32-unknown-unknown
      - uses: mozilla-actions/sccache-action@v0.0.6
      
      - name: install wasm32 via rustup
        run: rustup target add wasm32-unknown-unknown
      - name: Build WASM
        run: cargo build --target wasm32-unknown-unknown -p jetstream_wireformat

  # Examples
  examples:
    needs: 
    - build-base-${{ matrix.rust }}
    - build-components-${{ matrix.rust }}
    - build-server-${{ matrix.rust }}
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - uses: mozilla-actions/sccache-action@v0.0.6
      - name: Run examples
        run: cargo run --example echo