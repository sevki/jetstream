name: Release Please🙏!

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - main
jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: release-please-config.json
          # optional. customize path to .release-please-manifest.json
          manifest-file: .release-please-manifest.json
          target-branch: ${{ github.ref_name }}
          release-type: rust
      - uses: actions/checkout@v4
      - name: tag major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
      - name: checkout rs
        uses: actions-rs/toolchain@v1
        if: ${{ steps.release.outputs.release_created }}
        with:
          toolchain: stable
          override: true
      - name: Update and install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libssl-dev pkg-config
          cargo install cargo-publish-workspace-v2
      - name: publish to crates.io (dry-run)
        run: |
          export VERSION=v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          echo $VERSION
          echo "CI_TAG=$VERSION" >> $GITHUB_ENV
          cargo publish-workspace --crate-prefix jetstream_ --target-version v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }} --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --dry-run
      - name: publish to crates.io
        if: ${{ steps.release.outputs.release_created }}
        run: |
          cargo publish-workspace --crate-prefix jetstream_ --target-version v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }} --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
